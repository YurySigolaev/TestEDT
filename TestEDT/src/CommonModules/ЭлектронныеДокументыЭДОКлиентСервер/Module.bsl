
#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработкаДействийПоЭДО

Процедура ДобавитьДействие(НаборДействий, Действие) Экспорт
	НаборДействий.Вставить(Действие, Истина);
КонецПроцедуры

Функция ЕстьДействие(НаборДействий, Действие) Экспорт
	Возврат НаборДействий[Действие] = Истина;
КонецФункции

Функция НовыеДополнительныеПараметрыДействия() Экспорт
	Параметры = Новый Структура;
	Параметры.Вставить("Комментарий", "");
	Параметры.Вставить("Ответственный");
	Возврат Параметры;
КонецФункции

Функция НовыйИтогВыполненияДействийПоЭДО() Экспорт
	Итог = Новый Структура;
	Итог.Вставить("ОбработаноПоДействиям", Новый Соответствие);
	Итог.Вставить("ОбработанныеДокументы", Новый Соответствие);
	Возврат Итог;
КонецФункции

Функция НовыеПараметрыВыполненияДействийПоЭДО() Экспорт
	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("НаборДействий", Новый Соответствие);
	ПараметрыВыполнения.Вставить("ОбъектыДействий", Новый Структура);
	ПараметрыВыполнения.ОбъектыДействий.Вставить("ОбъектыУчета", Новый Массив);
	ПараметрыВыполнения.ОбъектыДействий.Вставить("ПакетыДокументов", Новый Массив);
	ПараметрыВыполнения.ОбъектыДействий.Вставить("ЭлектронныеДокументы", Новый Массив);
	ПараметрыВыполнения.ОбъектыДействий.Вставить("Сообщения", Новый Массив);
	ПараметрыВыполнения.ОбъектыДействий.Вставить("ИдентификаторыОрганизаций", Новый Массив);
	ПараметрыВыполнения.Вставить("ДополнительныеПараметрыДействий", Новый Соответствие);
	ПараметрыВыполнения.Вставить("КлючиНастроекОбъектов", Новый Соответствие);
	ПараметрыВыполнения.Вставить("НастройкиОбъектов", Новый Соответствие);
	ПараметрыВыполнения.Вставить("ПодписантыОбъектов", Новый Соответствие);
	ПараметрыВыполнения.Вставить("МаршрутыПодписанияОбъектов", Новый Соответствие);
	ПараметрыВыполнения.Вставить("ДополнительныеДанныеОбъектов", Новый Соответствие);
	ПараметрыВыполнения.Вставить("ОтпечаткиСертификатов", Неопределено);
	ПараметрыВыполнения.Вставить("ВыбранныеСертификаты", Новый Массив);
	Возврат ПараметрыВыполнения;
КонецФункции

#КонецОбласти

#Область ДополнительныеПоля

// Возвращает поддерживаетмые типы разделов дополнительных полей докумнтов.
//
// Возвращаемое значение:
//  Структура - форматы:
//   * Шапка - Строка - Шапка.
//   * Таблица - Строка - Таблица.
//
Функция ТипыРазделовДополнительныхПолей() Экспорт

	ТипыРазделов = Новый Структура;
	ТипыРазделов.Вставить("Шапка", "Шапка");
	ТипыРазделов.Вставить("Таблица", "Таблица");
	
	Возврат ТипыРазделов;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПредставлениеДокумента

Процедура ОбработкаПолученияПолейПредставленияДокумента(Поля, СтандартнаяОбработка) Экспорт
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("ВидДокумента");
	Поля.Добавить("НомерДокумента");
	Поля.Добавить("ДатаДокумента");
КонецПроцедуры

Процедура ОбработкаПолученияПредставленияДокумента(Данные, Представление, СтандартнаяОбработка) Экспорт
	СтандартнаяОбработка = Ложь;
	Представление = ПредставлениеДокументаПоСвойствам(Данные);
КонецПроцедуры

Функция ПредставлениеДокументаПоСвойствам(СвойстваДокумента, ЭтоНовый = Ложь) Экспорт
	
	Если ЗначениеЗаполнено(СвойстваДокумента.НомерДокумента) И ЗначениеЗаполнено(СвойстваДокумента.ДатаДокумента) Тогда
		Представление = СтрШаблон(НСтр("ru = '%1 № %2 от %3'"), СвойстваДокумента.ВидДокумента,
			СвойстваДокумента.НомерДокумента, Формат(СвойстваДокумента.ДатаДокумента, "ДЛФ=D;"));
	ИначеЕсли ЗначениеЗаполнено(СвойстваДокумента.НомерДокумента) Тогда
		Представление = СтрШаблон(НСтр("ru = '%1 № %2'"), СвойстваДокумента.ВидДокумента,
			СвойстваДокумента.НомерДокумента);
	ИначеЕсли ЗначениеЗаполнено(СвойстваДокумента.ДатаДокумента) Тогда
		Представление = СтрШаблон(НСтр("ru = '%1 от %2'"), СвойстваДокумента.ВидДокумента,
			Формат(СвойстваДокумента.ДатаДокумента, "ДЛФ=D;"));
	Иначе
		Представление = Строка(СвойстваДокумента.ВидДокумента);
	КонецЕсли;
	
	Если ЭтоНовый Тогда
		Представление = СтрШаблон(НСтр("ru = '%1 (Создание)'"), Представление);
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

#КонецОбласти

#КонецОбласти
