#Область СлужебныйПрограммныйИнтерфейс

// В процедуре заполняются данные по организации для мастера 1С-Отчетности.
//
// Параметры:
//   Организация - ОпределяемыйТип.Организация - ссылка на определяемый справочник Организация.
//   ДанныеДляМастера - Структура:
//     * ЕстьПодключениеЭДО - Булево - признак подключения переданной организации к сервису 1С-ЭДО;
//     * МассивОператоровЭДО - Массив - перечень актуальных операторов ЭДО в сервисе 1С-ЭДО;
//     * СсылкаОписаниеСервиса - Строка - ссылка на актуальную информацию о сервисе 1С-ЭДО.
//
Процедура ЗаполнитьДанныеДляМастера1СОтчетности(Организация, ДанныеДляМастера) Экспорт
	
	Если ДанныеДляМастера.Свойство("СсылкаОписаниеСервиса") Тогда
		ДанныеДляМастера.СсылкаОписаниеСервиса = СинхронизацияЭДОКлиентСервер.СсылкаНаОписаниеСервисаЭДО();
	КонецЕсли;
	
	Если ДанныеДляМастера.Свойство("ЕстьПодключениеЭДО") И ЗначениеЗаполнено(Организация) Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	УчетныеЗаписиЭДО.ИдентификаторЭДО КАК ИдентификаторОрганизации
		|ИЗ
		|	УчетныеЗаписиЭДО КАК УчетныеЗаписиЭДО";
		
		Отбор = СинхронизацияЭДО.НовыйОтборУчетныхЗаписей();
		Отбор.СпособОбмена = "ЗНАЧЕНИЕ(Перечисление.СпособыОбменаЭД.ЧерезСервис1СЭДО)";
		Отбор.Организация = "&Организация";
		ЗапросУчетныхЗаписей = СинхронизацияЭДО.ЗапросУчетныхЗаписей("УчетныеЗаписиЭДО", Отбор);
		
		Запросы = Новый Массив;
		Запросы.Добавить(ЗапросУчетныхЗаписей);
		
		ИтоговыйЗапрос = ОбщегоНазначенияБЭД.СоединитьЗапросы(Запрос, Запросы);
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = ИтоговыйЗапрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);
		
		ДанныеДляМастера.ЕстьПодключениеЭДО = Не Результат.Пустой();
	КонецЕсли;
	
	Если ДанныеДляМастера.Свойство("МассивОператоровЭДО") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ОператорыЭДО.Представление КАК Представление
		|ИЗ
		|	ОператорыЭДО КАК ОператорыЭДО";
		
		Отбор = СинхронизацияЭДО.НовыйОтборОператоровЭлектронногоДокументооборота();
		Отбор.СпособОбмена = "ЗНАЧЕНИЕ(Перечисление.СпособыОбменаЭД.ЧерезСервис1СЭДО)";
		ЗапросУчетныхЗаписей = СинхронизацияЭДО.ЗапросОператоровЭДО("ОператорыЭДО", Отбор);
		
		Запросы = Новый Массив;
		Запросы.Добавить(ЗапросУчетныхЗаписей);
		
		ИтоговыйЗапрос = ОбщегоНазначенияБЭД.СоединитьЗапросы(Запрос, Запросы);
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = ИтоговыйЗапрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);
		
		ДанныеДляМастера.МассивОператоровЭДО = Результат.Выгрузить().ВыгрузитьКолонку("Представление");
	КонецЕсли;
	
КонецПроцедуры

// Проверяет необходимость переиздания указанного сертификата для использования в ЭДО.
//
// Параметры:
//  Организация - ОпределяемыйТип.Организация - организация для проверки.
//  Сертификат - СертификатКриптографии - сертификат для проверки.
//  ТребуетсяПереиздание - Булево - признак необходимости переиздать сертификат для ЭДО.
//
Процедура ТребуетсяПереизданиеСертификатаЭДО(Знач Организация, Знач Сертификат, ТребуетсяПереиздание) Экспорт
	
	СсылкаНаСертификат = ЭлектроннаяПодпись.СсылкаНаСертификат(Сертификат);
	
	Если ЗначениеЗаполнено(СсылкаНаСертификат) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СертификатыУчетныхЗаписей.ИдентификаторЭДО КАК ИдентификаторОрганизации
		|ИЗ
		|	СертификатыУчетныхЗаписей КАК СертификатыУчетныхЗаписей";
		
		Отбор = СинхронизацияЭДО.НовыйОтборСертификатовУчетныхЗаписей();
		Отбор.Сертификат = "&Сертификат";
		ЗапросСертификатов = СинхронизацияЭДО.ЗапросСертификатовУчетныхЗаписей("СертификатыУчетныхЗаписей", Отбор);
		
		Запросы = Новый Массив;
		Запросы.Добавить(ЗапросСертификатов);
		
		ИтоговыйЗапрос = ОбщегоНазначенияБЭД.СоединитьЗапросы(Запрос, Запросы);
		ИтоговыйЗапрос.УстановитьПараметр("Сертификат", СсылкаНаСертификат);
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = ИтоговыйЗапрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);
		
		ТребуетсяПереиздание = Не Результат.Пустой();
	Иначе
		ТребуетсяПереиздание = Ложь;
	КонецЕсли;
	
КонецПроцедуры

// Инициализирует настройки подключения ЭДО.
//
// Параметры:
//  Организация - ОпределяемыйТип.Организация - организация для подключения ЭДО.
//  КодФНС - Строка - код налогового органа организации.
//  Настройки - Строка - инициализированные настройки.
//
Процедура ИнициализироватьНастройкиПодключенияЭДО(Знач Организация, Знач КодФНС, Настройки) Экспорт
	
	Параметры = СинхронизацияЭДОКлиентСервер.НовыеПараметрыПодключенияЭДО();
	Параметры.Организация = Организация;
	Параметры.КодНалоговогоОргана = КодФНС;
	Параметры.ОператорЭДО = "2AE"; // Калуга Астрал.
	Параметры.СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезСервис1СЭДО;
	Параметры.НаименованиеУчетнойЗаписи = СтрШаблон(НСтр("ru = '%1, %2'"), Параметры.Организация, Параметры.СпособОбменаЭД);
	Параметры.НазначениеУчетнойЗаписи = НСтр("ru = 'Основная'");
	Параметры.ПринятыУсловияИспользования = Истина;
	
	КонтактнаяИнформация = ИнтеграцияБСПБЭД.КонтактнаяИнформацияОбъекта(Организация, "ЮрАдресОрганизации");
	Параметры.АдресОрганизации         = КонтактнаяИнформация.Представление;
	Параметры.АдресОрганизацииЗначение = КонтактнаяИнформация.Значение;
		
	Операция = СинхронизацияЭДОКлиентСервер.НоваяОперацияПодключенияЭДО(Параметры);
	
	Настройки = ИнтеграцияБРОЭДОСлужебный.ОперацияЭДОВСтроку(Операция);
	
КонецПроцедуры

// Инициализирует настройки переиздания сертификата криптографии.
//
// Параметры:
//  Организация - ОпределяемыйТип.Организация - организация для переиздания сертификата.
//  КодФНС - Строка - код налогового органа организации.
//  Сертификат - СертификатКриптографии - сертификат для переиздания.
//  Настройки - Строка - инициализированные настройки.
//
Процедура ИнициализироватьНастройкиПереизданияСертификатаЭДО(Знач Организация, Знач КодФНС, Знач Сертификат, Настройки) Экспорт
	
	СсылкаНаСертификат = ЭлектроннаяПодпись.СсылкаНаСертификат(Сертификат);
	
	Параметры = СинхронизацияЭДОКлиентСервер.НовыеПараметрыОбновленияСертификата();
	Параметры.Организация = Организация;
	Параметры.Сертификат  = СсылкаНаСертификат;
	
	Операция = СинхронизацияЭДОКлиентСервер.НоваяОперацияОбновленияСертификата(Параметры);
	
	Настройки = ИнтеграцияБРОЭДОСлужебный.ОперацияЭДОВСтроку(Операция);
	
КонецПроцедуры

// Проверяет корректность настроек операции ЭДО (подключение ЭДО, переиздание сертификата).
//
// Параметры:
//  Настройки - Строка - настройки для проверки.
//                       См. ИнициализироватьНастройкиПодключенияЭДО.
//                       См. ИнициализироватьНастройкиПереизданияСертификатаЭДО.
//  НастройкиКорректны - Булево - результат проверки настроек.
//
Процедура ПроверитьНастройкиРегистрацииЭДО(Знач Настройки, НастройкиКорректны) Экспорт
	
	Операция = ИнтеграцияБРОЭДОСлужебный.ОперацияЭДОИзСтроки(Настройки);
	
	НастройкиКорректны = ИнтеграцияБРОЭДОСлужебный.ОперацияЭДОКорректна(Операция);
	
КонецПроцедуры

// Выгружает электронные документы для предоставления в ФНС.
// Предназначена для использования совместно с библиотекой "Регламентированная отчетность".
//
// Параметры:
//  УчетныеДокументы - Массив - массив ссылок на документы информационной базы.
//  УникальныйИдентификатор - УникальныйИдентификатор - будет использован для помещения файлов выгрузки во временное хранилище.
//
// Возвращаемое значение:
//  Соответствие - соответствие документов ИБ:
//    * Ключ     - ДокументСсылка - ссылка на документ-владелец электронного документа.
//    * Значение - Массив Из Структура - параметры электронных документов, с ключами:
//       * ТипФайла - Строка - возможные значения: "ФайлВыгрузки", "ЭЦП", "ФайлПодтверждения", "ЭЦППодтверждения".
//       * КНД      - Строка - КНД выгружаемого электронного документа, заполняется только для файла выгрузки и файла подтверждения.
//       * ИмяФайла - Строка - имя выгружаемого файла.
//       * АдресВременногоХранилища - Строка - адрес временного хранилища с данными файлов выгрузки.
//
Функция ВыгрузкаДокументовДляПередачиВФНС(УчетныеДокументы, УникальныйИдентификатор) Экспорт
	
	ДанныйФайлов = ЭлектронныеДокументыЭДО.ДанныеФайловЭлектронныхДокументовДляВыгрузкиВФНС(
		УчетныеДокументы, УникальныйИдентификатор);
	
	КонверторТипов = Новый Соответствие;
	КонверторТипов.Вставить("ОсновнойТитул", "ФайлВыгрузки");
	КонверторТипов.Вставить("ОтветныйТитул", "ФайлПодтверждения");
	КонверторТипов.Вставить("ОсновнаяПодпись", "ЭЦП");
	КонверторТипов.Вставить("ОтветнаяПодпись", "ЭЦППодтверждения");
		
	Результат = Новый Соответствие;
	
	Для каждого Данные Из ДанныйФайлов Цикл
		
		НаборОписанийФайлов = Новый Массив;
		
		Для каждого Файл Из Данные.Значение Цикл
		
			ОписаниеФайла = Новый Структура;
			ОписаниеФайла.Вставить("ТипФайла", КонверторТипов[Файл.Тип]);
			ОписаниеФайла.Вставить("ИмяФайла", Файл.Имя);
			ОписаниеФайла.Вставить("КНД", Файл.КНД);
			ОписаниеФайла.Вставить("АдресВременногоХранилища", Файл.Данные);
			
			НаборОписанийФайлов.Добавить(ОписаниеФайла);
		
		КонецЦикла;
		
		Результат.Вставить(Данные.Ключ, НаборОписанийФайлов);
	
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Получает свойства объектов учета, которые будут отражаться в едином списке документов, представляемых по требованию ФНС.
// Для объекта учета должны существовать электронные документы по завершенным обменам, не помеченные на удаление и 
// имеющие один из следующих типов:
// УПД, СчетФактура, ТоварнаяНакладная, АктВыполненныхРабот, АктНаПередачуПрав,
// УКД, КорректировочныйСчетФактура, СоглашениеОбИзмененииСтоимости,
// АктОРасхождениях.
//
// Параметры:
//  ОбъектыУчета - Массив - массив ссылок на объекты учета электронных документов.
//                       Если параметр указан, требуется заполнить свойства только указанных объектов.
//                       Если параметр не указан или массив пустой, тогда требуется заполнить свойства
//                       для всех объектов учета, по которым ЭДО завершен.
//
// Возвращаемое значение:
//   Соответствие - Соответствие объектов учета и видов электронных документов:
//    * Ключ     - ДокументСсылка - ссылка на документ учета.
//    * Значение - Строка - тип электронного документа, который следует преобразовать
//                 к строковому представлению определенного формата.
//                 Возможные значения:
//                 УПД, СчетФактура, ТоварнаяНакладнаяТОРГ12, АктПриемкиСдачиРабот, АктНаПередачуПрав,
//                 УКД, КорректировочныйСчетФактура, ДокументОбИзмененииСтоимости,
//                 ПередачаТоваров, ПередачаУслуг, АктОРасхождениях.
Функция СвойстваОбъектовУчетаЭлектронныхДокументовДляВыгрузкиВФНС(ОбъектыУчета = Неопределено) Экспорт

	СвойстваДокументов = ЭлектронныеДокументыЭДО.СвойстваЭлектронныхДокументовДляВыгрузкиВФНС(ОбъектыУчета);
	
	КонверторКНД = Новый Соответствие;
	КонверторКНД.Вставить("1175010", "ПередачаТоваров");
	КонверторКНД.Вставить("1175012", "ПередачаУслуг");
	
	КонверторТипов = Новый Соответствие;
	КонверторТипов.Вставить(Перечисления.ТипыДокументовЭДО.УПД, "УПД");
	КонверторТипов.Вставить(Перечисления.ТипыДокументовЭДО.СчетФактура, "СчетФактура");
	КонверторТипов.Вставить(Перечисления.ТипыДокументовЭДО.ТоварнаяНакладная, "ТоварнаяНакладнаяТОРГ12");
	КонверторТипов.Вставить(Перечисления.ТипыДокументовЭДО.АктВыполненныхРабот, "АктПриемкиСдачиРабот");
	КонверторТипов.Вставить(Перечисления.ТипыДокументовЭДО.АктНаПередачуПрав, "АктНаПередачуПрав");
	КонверторТипов.Вставить(Перечисления.ТипыДокументовЭДО.УКД, "УКД");
	КонверторТипов.Вставить(Перечисления.ТипыДокументовЭДО.КорректировочныйСчетФактура, "КорректировочныйСчетФактура");
	КонверторТипов.Вставить(Перечисления.ТипыДокументовЭДО.СоглашениеОбИзмененииСтоимости, "ДокументОбИзмененииСтоимости");
	КонверторТипов.Вставить(Перечисления.ТипыДокументовЭДО.АктОРасхождениях, "АктОРасхождениях");
	
	Результат = Новый Соответствие;
	
	Для каждого Свойство Из СвойстваДокументов Цикл
	
		Тип = КонверторКНД[Свойство.КНД];
		
		Если Не ЗначениеЗаполнено(Тип) Тогда
			
			Тип = КонверторТипов[Свойство.Тип];
		
		КонецЕсли;
		
		Если Тип = Неопределено Тогда
			Тип = "";
		КонецЕсли;
		
		Результат.Вставить(Свойство.ОбъектУчета, Тип);
		
	КонецЦикла;
	
	Возврат Результат
	
КонецФункции

#КонецОбласти