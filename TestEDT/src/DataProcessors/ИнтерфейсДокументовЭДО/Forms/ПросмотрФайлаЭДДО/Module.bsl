
#Область ОбработчикиСобытыйФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьДанныеФормы(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьЭДО();
	
	ЗагрузитьНастройкиФормы();
	УстановитьОформлениеНастроекФормы();
	
	ПоказатьПредставлениеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОжидатьФормированияПредставленияДокумента();
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ЗаполнитьДанныеСертификатовДляЭДО(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновленоСостояниеЭДДО"
		И Параметр.Свойство("Документы")
		И Параметр.Документы.Найти(ДокументДО) <> Неопределено Тогда
		
		ЕстьЭДО();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НадписьОшибкаФормированияПредставленияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ОткрытьЖурналРегистрации" Тогда
		
		СтандартнаяОбработка = Ложь;
		ОтборЖурналаРегистрации = Новый Структура;
		ОтборЖурналаРегистрации.Вставить("Данные", "ЭлектронныеДокументыЭДО.ПредставлениеДанныхДокумента");
		ЖурналРегистрацииКлиент.ОткрытьЖурналРегистрации(ОтборЖурналаРегистрации, ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область КомандыНастроекОтображения

&НаКлиенте
Процедура ОтображатьОбластьКопияВерна(Команда)
	
	ОтключитьВыводКопияВерна = Не ОтключитьВыводКопияВерна;
	Элементы.ОтображатьОбластьКопияВерна.Пометка = Не ОтключитьВыводКопияВерна;
	
	ПоказатьПредставлениеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьДополнительнуюИнформацию(Команда)
	
	ОтключитьВыводДопДанных = Не ОтключитьВыводДопДанных;
	Элементы.ОтображатьДополнительнуюИнформацию.Пометка = Не ОтключитьВыводДопДанных;
	
	ПоказатьПредставлениеДокумента();
		
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьБанковскиеРеквизиты(Команда)
	
	ВыводитьБанковскиеРеквизиты = Не ВыводитьБанковскиеРеквизиты;
	Элементы.ОтображатьБанковскиеРеквизиты.Пометка = ВыводитьБанковскиеРеквизиты;
	
	ПоказатьПредставлениеДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область КомандыДействийПоЭДО

&НаКлиенте
Процедура ВыполнитьДействиеПоЭДО(Команда)
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ИмяКоманды", Команда.Имя);
	
	ОбработчикЗавершения = Новый ОписаниеОповещения("ВыполнитьДействиеПоЭДОПослеПроверкиСертификатов",
		ЭтотОбъект, ПараметрыОбработчика);
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ПроверитьНаличиеСертификатовЭДО(ЭтотОбъект, ОбработчикЗавершения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДействиеПоЭДОПослеПроверкиСертификатов(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИмяКоманды = ДополнительныеПараметры.ИмяКоманды;
	
	Если ИмяКоманды = "ПодписатьДокументЭДО" Тогда
		
		ПодписатьПоЭДО(Результат);
		
	ИначеЕсли ИмяКоманды = "ПринятьДокументЭДО" Тогда
		
		Если ТребуетсяОтветнаяПодписьЭДО Тогда
			ПодписатьПоЭДО(Результат);
		Иначе
			УтвердитьДокументПоЭДО();
		КонецЕсли;
		
	ИначеЕсли ИмяКоманды = "ОтклонитьДокументЭДО" Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтклонитьАннулироватьДОПродолжить", ЭтотОбъект);
		
		ОбменСКонтрагентамиДОСлужебныйКлиент.ОтклонитьДокументПоЭДО(ДокументДО, ОписаниеОповещения);
		
	ИначеЕсли ИмяКоманды = "АннулироватьДокументЭДО" Тогда
		
		// Аннулирование добавим позже
		
	ИначеЕсли ИмяКоманды = "ПринятьАннулированиеЭДО" Тогда
		
		// Аннулирование добавим позже
		
	ИначеЕсли ИмяКоманды = "ОтклонитьАннулированиеЭДО" Тогда
		
		// Аннулирование добавим позже
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоставитьВОчередьЭДОНаОтправку(Команда)
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ПоставитьДокументыВОчередьНаОтправкуПоЭДО(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДокументДО));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьОбменПоЭДОПринудительно(Команда)
	
	ОбработчикЗавершения = Новый ОписаниеОповещения(
		"ПослеЗакрытияОбменаЭДОПринудительно", ЭтотОбъект);
	
	ОбменСКонтрагентамиДОСлужебныйКлиент.ЗакрытьДокументыПринудительно(
		ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДокументДО),
		ОбработчикЗавершения);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДанныеФормы(Отказ)
	
	ФайлДО = Параметры.ФайлДО;
	ДокументДО = Параметры.ДокументДО;
	ВерсияФайлаДО = Параметры.ВерсияФайлаДО;
	
	Если Не ЗначениеЗаполнено(ФайлДО) Тогда
		Отказ = Истина;
		
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Не выбран файл для просмотра данных ЭД.'"));
		
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументДО) Тогда
		ДокументДО = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФайлДО, "ВладелецФайла");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВерсияФайлаДО) Тогда
		ВерсияФайлаДО = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ФайлДО, "ТекущаяВерсия");
	КонецЕсли;
	
	ЭлектронныйДокументЭДО = ОбменСКонтрагентамиДОВызовСервера.ЭлектронныйДокументДокументаДО(ДокументДО);
	
	Если ЗначениеЗаполнено(ДокументДО) Тогда
		ВариантПодписания = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументДО,
			"ВидДокумента.ВариантПодписания");
	КонецЕсли;
	
	Заголовок = Строка(ФайлДО);
	
КонецПроцедуры

#Область ПредставлениеДокумента

&НаСервере
Процедура ПоказатьПредставлениеДокумента()
	
	ДанныеДляВизуализации = Новый Структура;
	ДанныеДляВизуализации.Вставить("Файл", ФайлДО);
	ДанныеДляВизуализации.Вставить("ВерсияФайла", ВерсияФайлаДО);
	
	ПараметрыВизуализацииДокумента = ИнтерфейсДокументовЭДО.НовыеПараметрыВизуализацииДокумента();
	
	ПараметрыВизуализацииДокумента.ВыводитьБанковскиеРеквизиты = ВыводитьБанковскиеРеквизиты;
	ПараметрыВизуализацииДокумента.ВыводитьДопДанные = Не ОтключитьВыводДопДанных;
	ПараметрыВизуализацииДокумента.ВыводитьКопияВерна = Не ОтключитьВыводКопияВерна;
	
	ФормированиеПредставления = ОбменСКонтрагентамиДОСлужебный.ЗапуститьФормированиеПредставленияФайлаДО(
		ДанныеДляВизуализации, УникальныйИдентификатор, ПараметрыВизуализацииДокумента);
	
	ОбновитьПредставлениеДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПредставлениеДокумента()
	
	Если ФормированиеПредставления = Неопределено
		ИЛИ ФормированиеПредставления.Статус = "Ошибка" Тогда
		
		ОтобразитьОшибкуПредставления();
		
	ИначеЕсли ФормированиеПредставления.Статус = "Выполнено" Тогда
		
		ОтобразитьПредставлениеДокумента();
		
	ИначеЕсли ФормированиеПредставления.Статус = "Выполняется" Тогда
		
		ОтобразитьОжиданиеПредставления();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьПредставлениеДокумента()
	
	РезультатФормирования = ПолучитьИзВременногоХранилища(ФормированиеПредставления.АдресРезультата);
	Если РезультатФормирования = Неопределено
		ИЛИ РезультатФормирования.ПредставлениеДокумента = Неопределено Тогда
		
		ОтобразитьОшибкуПредставления();
		Возврат;
	КонецЕсли;
	
	ПредставлениеДокумента = РезультатФормирования.ПредставлениеДокумента;
	
	ТабличныйДокументПредставления = ПредставлениеДокумента;
	
	ФормированиеПредставления = Неопределено;
	
	Элементы.СтраницыПредставленийДокумента.ТекущаяСтраница =
		Элементы.СтраницаТабличныйДокумент;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьОшибкуПредставления()
	
	Элементы.СтраницыПредставленийДокумента.ТекущаяСтраница =
		Элементы.СтраницаОшибка;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьОжиданиеПредставления()
	
	Элементы.СтраницыПредставленийДокумента.ТекущаяСтраница =
		Элементы.СтраницаОжидания;
	
КонецПроцедуры

&НаКлиенте
Процедура ОжидатьФормированияПредставленияДокумента()
	
	Если ФормированиеПредставления = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПоказатьПредставлениеДанныхДокументаПослеФормирования", ЭтотОбъект);
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.Вставить("ВыводитьОкноОжидания", Ложь);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ФормированиеПредставления, Оповещение, ПараметрыОжидания);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПредставлениеДанныхДокументаПослеФормирования(Результат, Контекст) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ФормированиеПредставления = Результат;
	ОбновитьПредставлениеДокумента();
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСНастройками

&НаСервере
Процедура ЗагрузитьНастройкиФормы()
	
	Настройки = ХранилищеСистемныхНастроек.Загрузить(
		"Документ.ЭлектронныйДокументИсходящийЭДО.Форма.ФормаПросмотра/ТекущиеДанные");
	
	ЗаполнитьЗначениеНастройки(Настройки, "ОтключитьВыводДопДанных", Истина);
	ЗаполнитьЗначениеНастройки(Настройки, "ОтключитьВыводКопияВерна", Истина);
	ЗаполнитьЗначениеНастройки(Настройки, "ВыводитьБанковскиеРеквизиты", Истина);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗначениеНастройки(Настройки, Ключ, ЗначениеПоУмолчанию = Неопределено)
	
	Если Настройки = Неопределено Тогда
		ЭтотОбъект[Ключ] = ЗначениеПоУмолчанию;
		Возврат;
	КонецЕсли;
	
	ЗначениеНастройки = Настройки.Получить(Ключ);
	Если ЗначениеНастройки = Неопределено Тогда
		ЗначениеНастройки = ЗначениеПоУмолчанию;
	КонецЕсли;
	
	ЭтотОбъект[Ключ] = ЗначениеНастройки;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОформлениеНастроекФормы()
	
	Элементы.ОтображатьДополнительнуюИнформацию.Пометка = НЕ ОтключитьВыводДопДанных;
	Элементы.ОтображатьОбластьКопияВерна.Пометка = НЕ ОтключитьВыводКопияВерна;
	
	Если ТипДокументаЭДО = Перечисления.ТипыДокументовЭДО.СчетНаОплату Тогда
		ВыводитьБанковскиеРеквизиты = Истина;
		Элементы.ОтображатьБанковскиеРеквизиты.Видимость = Ложь;
	Иначе
		Элементы.ОтображатьБанковскиеРеквизиты.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ОтображатьБанковскиеРеквизиты.Пометка = ВыводитьБанковскиеРеквизиты;
	
КонецПроцедуры

#КонецОбласти

#Область ОтображениеИДоступностьКоманд

&НаСервере
Процедура ЕстьЭДО() Экспорт
	
	ОбменСКонтрагентамиДОСлужебный.ЕстьЭДО(ДокументДО, ЭтотОбъект);
	
	УстановитьВидимостьПоЭДО();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьПоЭДО()
	
	ЭлементыДействийЭДО = Новый Соответствие;
	ЭлементыДействийЭДО.Вставить(Перечисления.ДействияПоЭДО.Утвердить,
		Элементы.ФормаПринятьДокументЭДО);
	ЭлементыДействийЭДО.Вставить(Перечисления.ДействияПоЭДО.Отклонить,
		Элементы.ФормаОтклонитьДокументЭДО);
	ЭлементыДействийЭДО.Вставить(Перечисления.ДействияПоЭДО.Сформировать,
		Элементы.ФормаПодписатьДокументЭДО);
	ЭлементыДействийЭДО.Вставить(Перечисления.ДействияПоЭДО.ВернутьВРаботу,
		Элементы.ФормаПоставитьВОчередьЭДОНаОтправку);
	ЭлементыДействийЭДО.Вставить(Перечисления.ДействияПоЭДО.ЗакрытьПринудительно,
		Элементы.ФормаЗакрытьОбменПоЭДОПринудительно);
	
	ОбменСКонтрагентамиДОСлужебный.УстановитьВидимостьДоступностьКомандЭДО(
		ДокументДО, ЭтотОбъект, ЭлементыДействийЭДО);
	
КонецПроцедуры

#КонецОбласти

#Область ВыполнениеДействийПоЭДО

&НаКлиенте
Процедура ПодписатьПоЭДО(ДоступныеСертификаты)
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("Объект", ДокументДО);
	ПараметрыОбработчика.Вставить("ПодписатьЭД", Истина);
	ПараметрыОбработчика.Вставить("НаправлениеЭД", 
		?(НаправлениеИсходящий, 
			ПредопределенноеЗначение("Перечисление.НаправленияЭДО.Исходящий"), 
			ПредопределенноеЗначение("Перечисление.НаправленияЭДО.Входящий")));
	ОбработчикЗавершения = Новый ОписаниеОповещения("ПодписатьПоЭДОЗавершение", ЭтотОбъект, ПараметрыОбработчика);
	
	ДанныеДляПодписания = Новый Структура;
	ДанныеДляПодписания.Вставить("ОбъектПодписания", ДокументДО);
	
	ДанныеПодписанта = Новый Структура;
	ДанныеПодписанта.Вставить("Подписал", ПользователиКлиентСервер.ТекущийПользователь());
	ДанныеПодписанта.Вставить("ДатаПодписи", ТекущаяДата());
	ДанныеПодписанта.Вставить("Подписан", Истина);
	
	ДанныеДляПодписания.Вставить("ПараметрыДанных",
		Новый Структура("ДанныеПодписанта", ДанныеПодписанта));
	
	РаботаСЭПКлиент.Подписать(ДанныеДляПодписания, УникальныйИдентификатор,
		ОбработчикЗавершения, , ДоступныеСертификаты);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьПоЭДОЗавершение(Результат, Параметры) Экспорт
	
	РаботаСЭПКлиент.ПослеПодписанияОбъекта(Результат, Параметры);
	
	Если Не НаправлениеИсходящий Тогда
		
		ОбменСКонтрагентамиДОСлужебныйКлиент.ПодписатьУтвердитьЭДНаСторонеПолучателя(ДокументДО);
		
	Иначе
		
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("Документы",
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ДокументДО));
		
		Оповестить("ОбновленоСостояниеЭДДО", ПараметрыОповещения);
		
		Текст = НСтр("ru = 'Документ поставлен в очередь на отправку контрагентам по ЭДО.'");
		Состояние(Текст, , , БиблиотекаКартинок.ЭмблемаСервиса1СЭДО);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьАннулироватьДОПродолжить(Результат, Параметры) Экспорт
	
	Если Результат = Истина Тогда
		ЕстьЭДО();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияОбменаЭДОПринудительно(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Ошибки.Количество() > 0 Тогда
		Для Каждого Ошибка Из Результат.Ошибки Цикл
			ОбщегоНазначенияКлиент.СообщитьПользователю(Ошибка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УтвердитьДокументПоЭДО()
	
	Если НаправлениеИсходящий Тогда
		Возврат;
	КонецЕсли;
	
	ОбработчикЗавершения = Новый ОписаниеОповещения("УтвердитьДокументПоЭДОЗавершение",
		ЭтотОбъект);
	ОбменСКонтрагентамиДОСлужебныйКлиент.ПодписатьУтвердитьЭДНаСторонеПолучателя(ДокументДО, ОбработчикЗавершения);
	
КонецПроцедуры

&НаКлиенте
Процедура УтвердитьДокументПоЭДОЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ЕстьЭДО();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
